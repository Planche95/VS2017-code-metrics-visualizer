@model SingleResultViewModel

<div class="card">
    <div class="card-header" style="background-color:aliceblue">
        <a class="card-link" data-toggle="collapse" href="#accordionCard_@Model.name.Replace(" ", "_")" aria-expanded="false">
            <h1 class="text-center">@Model.name</h1>
            <div class="progress">
                <div class="progress-bar bg-danger" style="width:@Model.overall["bad"].ToString().Replace(",", ".")%">
                    Bad
                </div>
                <div class="progress-bar bg-warning" style="width:@Model.overall["mid"].ToString().Replace(",", ".")%">
                    Mid
                </div>
                <div class="progress-bar bg-success" style="width:@Model.overall["good"].ToString().Replace(",", ".")%">
                    Good
                </div>
            </div>
        </a>
    </div>
    <div id="accordionCard_@Model.name.Replace(" ", "_")" class="collapse">
        <div class="card-body">

            <div class="container">
                <div class="row text-center">
                    <h4 class="col">
                        Bad: @Model.overall["bad"]%
                    </h4>
                    <h4 class="col">
                        Mid: @Model.overall["mid"]%
                    </h4>
                    <h4 class="col">
                        Good: @Model.overall["good"]%
                    </h4>
                </div>
            </div>
            
            <div id="accordion_@Model.name.Replace(" ", "_")">
                @await Html.PartialAsync("_ResultMetricsCardPartial", Model.maintainability,
                    new ViewDataDictionary(this.ViewData) { { "name", "accordion_" + Model.name.Replace(" ", "_") },
                                                            { "header", "Maintability" } })
                @await Html.PartialAsync("_ResultMetricsCardPartial", Model.cyclomaticComplexity,
                    new ViewDataDictionary(this.ViewData) { { "name", "accordion_" + Model.name.Replace(" ", "_") },
                                                            { "header", "Cyclomatic complexity" } })
                @await Html.PartialAsync("_ResultMetricsCardPartial", Model.classCoupling,
                    new ViewDataDictionary(this.ViewData) { { "name", "accordion_" + Model.name.Replace(" ", "_") },
                                                            { "header", "Class coupling" } })
                @await Html.PartialAsync("_ResultMetricsCardPartial", Model.linesOfCode,
                    new ViewDataDictionary(this.ViewData) { { "name", "accordion_" + Model.name.Replace(" ", "_") },
                                                            { "header", "Lines of code" } })
            </div>
        </div>
    </div>
</div>